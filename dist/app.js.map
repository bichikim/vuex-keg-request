{"version":3,"sources":["webpack://vuex-keg-request/webpack/universalModuleDefinition","webpack://vuex-keg-request/webpack/bootstrap","webpack://vuex-keg-request/external \"url-join\"","webpack://vuex-keg-request/./src/resolve-base-path.ts","webpack://vuex-keg-request/./src/resolve-params.ts","webpack://vuex-keg-request/./src/resolve-request-info.ts","webpack://vuex-keg-request/./src/index.ts"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","resolveBasePath","context","bassPath","resolve_base_path","Array","isArray","myBasePath_1","forEach","external_url_join_default","resolve_params","firstArgs","args","_i","arguments","length","Error","requestInfo","params","pathParams","headers","assign","moduleExplorer","requestConfig","_a","split","getResult","basePath","requests","getRequest","enterModule","way","cloneWay","slice","nextModuleName","shift","join","_requestConfig","nextBasePath","__assign","concat","resolve_request_info","pipeRunner","payload","hookList","result","hookList_1","hook","sent","__webpack_exports__","options","_this","_b","def","_c","method","defaultMethod","afterHook","beforeHook","request","apply","_requestInfo","url","path","_d","_request","urlAndPath","_e","_urlAndPath","otherPayload","__rest","fetch","body","JSON","stringify","src_assign","Content-Type"],"mappings":"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","file":"app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"url-join\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vuex-keg-request\", [\"url-join\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vuex-keg-request\"] = factory(require(\"url-join\"));\n\telse\n\t\troot[\"vuex-keg-request\"] = factory(root[\"url-join\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import join from 'url-join'\r\nimport {ActionContext} from 'vuex'\r\nimport {\r\n  TBasePass,\r\n} from './types'\r\n\r\nfunction resolveBasePath<S, R>(\r\n  context: ActionContext<S, R>,\r\n  bassPath?: TBasePass<S, R>,\r\n): string {\r\n  if(typeof bassPath === 'string'){\r\n    return bassPath\r\n  }\r\n  if(typeof bassPath === 'function'){\r\n    return bassPath(context)\r\n  }\r\n  return ''\r\n}\r\n\r\nfunction resolveBasePaths<S, R>(\r\n  context: ActionContext<S, R>,\r\n  bassPath?: TBasePass<S, R> | Array<TBasePass<S, R>>,\r\n): string {\r\n  if(Array.isArray(bassPath)){\r\n    let myBasePath: string = ''\r\n    bassPath.forEach((value) => {\r\n      if(value){\r\n        myBasePath = join(myBasePath, resolveBasePath<S, R>(context, value))\r\n      }\r\n    })\r\n    return myBasePath\r\n  }\r\n  return resolveBasePath(context, bassPath)\r\n}\r\n\r\nexport default resolveBasePaths\r\n","import {IRequest} from './types'\r\nimport {\r\n  IRequestOptions,\r\n} from './types'\r\n\r\nconst resolveParams = (\r\n  firstArgs: IRequestOptions | string | IRequest, ...args: any[]): IRequestOptions => {\r\n  if(!firstArgs){\r\n    throw new Error('[vuex-keg-request resolve-params] firstArgs must exist')\r\n  }\r\n  if(\r\n    typeof firstArgs === 'string'\r\n    || typeof firstArgs === 'function'\r\n    || typeof firstArgs === 'object' && !(firstArgs as IRequestOptions).requestInfo\r\n  ){\r\n    const [params, pathParams, headers] = args\r\n    return Object.assign(\r\n      {requestInfo: firstArgs as IRequest},\r\n      {params, pathParams, headers}\r\n    )\r\n  }\r\n\r\n  return firstArgs as IRequestOptions\r\n}\r\n\r\nexport default resolveParams\r\n","\r\nimport {ActionContext} from 'vuex'\r\n\r\nimport {\r\n  IRequest,\r\n  IRequestConfig,\r\n  IResolveRequestInfoResult,\r\n  TRequestRunner,\r\n} from './types'\r\n\r\nfunction enterModule<S, R>(\r\n  way: string[],\r\n  context: ActionContext<S, R>,\r\n  requestConfig?: IRequestConfig<S, R>,\r\n): IRequestConfig<S, R> | undefined {\r\n  const cloneWay = [...way]\r\n  if(cloneWay.length > 0){\r\n    const nextModuleName: any = cloneWay.shift()\r\n    if(!requestConfig || !requestConfig.modules){\r\n      throw new Error(\r\n        '[vuex-keg-request enterModule] there is no modules any more' +\r\n        `is ${way.join('/')}`)\r\n    }\r\n    const _requestConfig = requestConfig.modules[nextModuleName]\r\n    //\r\n\r\n    let basePath: any = requestConfig.basePath\r\n    let nextBasePath: any = _requestConfig.basePath\r\n    if(!Array.isArray(basePath)){\r\n      basePath = [basePath]\r\n    }\r\n    if(!Array.isArray(nextBasePath)){\r\n      nextBasePath = [nextBasePath]\r\n    }\r\n\r\n    return enterModule(\r\n      cloneWay,\r\n      context,\r\n      {\r\n        ..._requestConfig,\r\n        basePath: (basePath as any[]).concat(nextBasePath),\r\n      },\r\n    )\r\n  }\r\n  return requestConfig\r\n}\r\n\r\nfunction getRequest<S, R>(\r\n  name: string,\r\n  requestConfig?: IRequestConfig<S, R>,\r\n): IRequest | TRequestRunner {\r\n  if(!requestConfig || !requestConfig.requests){\r\n    throw new Error('no requests')\r\n  }\r\n  return requestConfig.requests[name]\r\n}\r\n\r\nfunction moduleExplorer<S, R>(\r\n  requestInfo: string,\r\n  context: ActionContext<S, R>,\r\n  requestConfig?: IRequestConfig<S, R>,\r\n): IResolveRequestInfoResult<S, R> {\r\n  const [name, module] = requestInfo.split('@')\r\n  const getResult = (requestConfig?: IRequestConfig<S, R>): IResolveRequestInfoResult<S, R> => {\r\n    return {\r\n      basePath: requestConfig && requestConfig.basePath,\r\n      requestInfo: getRequest<S, R>(name, requestConfig),\r\n    }\r\n  }\r\n  if(!module){\r\n    return getResult(requestConfig)\r\n  }\r\n  return getResult(enterModule(module.split('/'), context, requestConfig))\r\n}\r\n\r\nfunction resolveRequestInfo<S, R>(\r\n  requestInfo: string | IRequest,\r\n  context: ActionContext<S, R>,\r\n  requestConfig?: IRequestConfig<S, R>,\r\n): IResolveRequestInfoResult<S, R> {\r\n  if(typeof requestInfo === 'string'){\r\n    return moduleExplorer(requestInfo, context, requestConfig)\r\n  }\r\n\r\n  /* istanbul ignore else */\r\n  if(typeof requestInfo === 'object' || typeof requestInfo === 'function'){\r\n    return {\r\n      basePath: requestConfig && requestConfig.basePath,\r\n      requestInfo,\r\n    }\r\n  }\r\n  /* istanbul ignore next */\r\n  throw new Error(\r\n    '[vuex-keg-request resolveRequestInfo]' +\r\n    ' requestInfo should be a function, a object or a string')\r\n}\r\n\r\nexport default resolveRequestInfo\r\n","import join from 'url-join'\r\nimport {ActionContext} from 'vuex'\r\nimport resolveBasePaths from './resolve-base-path'\r\nimport resolveParams from './resolve-params'\r\nimport resolveRequestInfo from './resolve-request-info'\r\nimport {\r\n  IHookPayload,\r\n  IKegRequestOptions,\r\n  IRequest,\r\n  IRequestOptions, TFnAfterHook,\r\n  TFnBeforeHook,\r\n  TKegRequestPluginRunner,\r\n} from './types'\r\nexport * from './types'\r\n\r\nasync function pipeRunner<S>(\r\n  context: ActionContext<S, any>,\r\n  payload: IHookPayload,\r\n  hookList?:\r\n  TFnBeforeHook<S, any> | Array<TFnBeforeHook<S, any>>\r\n  | TFnAfterHook<S, any> | Array<TFnAfterHook<S, any>>,\r\n): Promise<IHookPayload> {\r\n  if(!hookList){return payload}\r\n  if(Array.isArray(hookList)){\r\n    let result = payload\r\n    for(const hook of hookList){\r\n      // eslint-disable-next-line no-await-in-loop\r\n      result = await (hook as any)(context, result)\r\n    }\r\n    return result\r\n  }\r\n  return (hookList as any)(context, payload)\r\n}\r\n\r\nfunction kegRequest<S = any, R = any>(options: IKegRequestOptions<S, R> = {})  {\r\n  const {\r\n    requestConfig = {requests: {}},\r\n    def: {\r\n      method: defaultMethod = 'GET',\r\n    } = {},\r\n    afterHook,\r\n    beforeHook,\r\n    request,\r\n  } = options\r\n  return () => {\r\n    return (context: ActionContext<S, R>): TKegRequestPluginRunner => {\r\n      return async (\r\n        firstArgs: IRequestOptions | string | IRequest,\r\n        ...args: any[]\r\n      ): Promise<any> => {\r\n        const {\r\n          requestInfo: _requestInfo,\r\n          headers,\r\n          params,\r\n          pathParams,\r\n        } = resolveParams(firstArgs, ...args)\r\n        const {basePath, requestInfo} =\r\n          resolveRequestInfo<S, R>(_requestInfo, context, requestConfig)\r\n        const url = resolveBasePaths(context, basePath)\r\n        if(typeof requestInfo === 'function'){\r\n          return requestInfo(url, {params, headers, method: defaultMethod})\r\n        }\r\n        const {path = '', method = defaultMethod, request: _request} = requestInfo\r\n        const urlAndPath = join(url, typeof path === 'function' ? path(pathParams) : path)\r\n        const payload: IHookPayload = await pipeRunner<S>(\r\n          context,\r\n          {path: urlAndPath, params, headers, method}, beforeHook\r\n        )\r\n        const {path: _urlAndPath, ...otherPayload} = payload\r\n        let result\r\n        if(_request){\r\n          result = await _request(_urlAndPath, otherPayload)\r\n        }else if(request){\r\n          result = await request(_urlAndPath, otherPayload)\r\n        }else{\r\n          result = await fetch(_urlAndPath, {\r\n            body: JSON.stringify(otherPayload.params),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              ...otherPayload.headers,\r\n            },\r\n            method: otherPayload.method,\r\n          })\r\n        }\r\n        return pipeRunner<S>(\r\n          context,\r\n          result,\r\n          afterHook,\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default kegRequest\r\n"],"sourceRoot":""}